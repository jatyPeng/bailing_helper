<?php

declare(strict_types=1);
/**
 * This file is part of Kuaijing Bailing.
 *
 * @link     https://www.kuaijingai.com
 * @document https://help.kuaijingai.com
 * @contact  www.kuaijingai.com 7*12 9:00-21:00
 */
namespace App\Controller\%DIR%;

use App\Controller\AbstractController;
use App\Model\%CLASS%;
use App\Request\%CLASS%Request;
use Bailing\Annotation\OrgPermission;
use Bailing\Annotation\RateRequest;
use Bailing\Constants\Code\Common\CommonCode;
use Bailing\Helper\ApiHelper;
use Bailing\Middleware\OrgMiddleware;
use Hyperf\HttpServer\Annotation\Controller;
use Hyperf\HttpServer\Annotation\DeleteMapping;
use Hyperf\HttpServer\Annotation\GetMapping;
use Hyperf\HttpServer\Annotation\Middleware;
use Hyperf\HttpServer\Annotation\PostMapping;
use Hyperf\HttpServer\Annotation\PutMapping;

#[Controller]
#[Middleware(OrgMiddleware::class)]
class %CLASS%Controller extends AbstractController
{
    #[PostMapping(path: '%ROUTER%/query')]
    #[OrgPermission(module: '', action: 'curd:查看-list', icon: '', alias: '', url: '', sort: 0, app: '')]
    public function list(): array
    {
        $post = validateForm(%CLASS%Request::class, 'list', %CLASS%::class);
        $nowAdmin = contextGet('nowUser');

        // 默认为ID倒序
        if (empty($post['sorts'])) {
            $post['sorts'] = [
                [
                    'field' => 'id',
                    'asc' => false,
                ],
            ];
        }
        $list = buildFormSearchQuery(%CLASS%::query()->where(['org_id' => $nowAdmin->org_id]), $post['filters'], $post['sorts'])->paginate((int) $this->request->input('pageSize', 20))->toArray();
        // 如果不需要处理列表，则删除掉
        if ($list['data']) {
            foreach ($list['data'] as $key => &$item) {
                $item = $item;
                // todo...
            }
        }

        return ApiHelper::genSuccessData(
            genListData(
                $list,
                [
                    'dict_menu_alias' => '',
                ]
            )
        );
    }

    #[PostMapping(path: '%ROUTER%')]
    #[RateRequest]
    #[OrgPermission(module: '', action: 'curd:新增-add')]
    public function add(): array
    {
        return self::editHandle();
    }

    #[PutMapping(path: '%ROUTER%/{id:\d+}')]
    #[RateRequest(rateKey: 'id')]
    #[OrgPermission(module: '', action: 'curd:编辑-edit')]
    public function edit(?int $id): array
    {
        return self::editHandle($id);
    }

    private function editHandle(?int $id = 0): array
    {
        $post = validateForm(%CLASS%Request::class, 'edit', %CLASS%::class);
        $nowAdmin = contextGet('nowUser');

        if (! empty($id)) {
            $model = %CLASS%::query()->where(['id' => $id, 'org_id' => $nowAdmin->org_id])->first();
            if (empty($model)) {
                return ApiHelper::genErrorDataEmpty();
            }
        } else {
            $model = new %CLASS%();
            $model->org_id = $nowAdmin->org_id;
        }
        %ADD_FIELDS%

        if (! $model->save()) {
            return ApiHelper::genErrorData(CommonCode::SAVE_FAILED);
        }

        return ApiHelper::genSuccessData(['id' => $model->id], CommonCode::SAVE_SUCCESS);
    }

    #[GetMapping(path: '%ROUTER%/{id:\d+}')]
    public function detail(int $id): array
    {
        $get = validateForm(%CLASS%Request::class, 'detail', %CLASS%::class);
        $nowAdmin = contextGet('nowUser');

        $detail = %CLASS%::query()->where(['id' => $id, 'org_id' => $nowAdmin->org_id])->first();
        if (empty($detail)) {
             return ApiHelper::genErrorDataEmpty();
        }
        $detailArr = $detail->toArray();

        return ApiHelper::genSuccessData(['detail' => $detailArr]);
    }

    #[DeleteMapping(path: '%ROUTER%/{id:\d+}')]
    #[RateRequest(rateKey: 'id')]
    #[OrgPermission(module: '', action: 'curd:删除-delete')]
    public function delete(int $id): array
    {
        $get = validateForm(%CLASS%Request::class, 'delete', %CLASS%::class);
        $nowAdmin = contextGet('nowUser');

        $detail = %CLASS%::query()->where(['id' => $id, 'org_id' => $nowAdmin->org_id])->first();
        if (empty($detail)) {
            return ApiHelper::genErrorDataEmpty();
        }

        /**
        // todo...（如果没有子数据，请移除此段代码。如果需要连带子数据一并删除，请另外编写代码）本行代码必须移除
        // 存在子数据，不允许删除
        if (SubData::query()->where(['cat_id' => $detail->id])->first()) {
            return ApiHelper::genErrorData('请先删除子数据后，再删除此数据');
        }
        **/

        try {
            if (! $detail->delete()) {
                return ApiHelper::genErrorData(CommonCode::OPERATION_FAILED);
            }
        } catch (\Exception $e) {
            stdLog()->error('%CLASS% delete error：' . $e->getMessage());
            return ApiHelper::genErrorData(CommonCode::OPERATION_FAILED);
        }

        return ApiHelper::genSuccessData(['id' => $detail->id], CommonCode::OPERATION_SUCCESS);
    }
}
